<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ritchie – Formulas</title>
    <link>http://docs.devritchiecli.io/formulas/</link>
    <description>Recent content in Formulas on Ritchie</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="http://docs.devritchiecli.io/formulas/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Formulas: Run Formula</title>
      <link>http://docs.devritchiecli.io/formulas/run-formula/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://docs.devritchiecli.io/formulas/run-formula/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;h2 id=&#34;how-to-run-formulas&#34;&gt;&lt;strong&gt;How to run formulas?&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;There are &lt;strong&gt;two ways&lt;/strong&gt; to run formulas on Ritchie:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Locally&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Using Docker&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The &lt;strong&gt;default formulas execution method&lt;/strong&gt; is defined during the initialization step with the &lt;strong&gt;&lt;code&gt;rit init&lt;/code&gt;&lt;/strong&gt; command. You can change this setting by running the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;rit set formula-runner
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://docs.devritchiecli.io/shared/rit-run-formula.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-locally&#34;&gt;&lt;strong&gt;1. Locally&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;To run a formula locally, it is necessary to have installed on your computer the formula programming languages dependencies used to create the formula.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; A formula written in &lt;strong&gt;Java&lt;/strong&gt; will need &lt;strong&gt;Java installed&lt;/strong&gt; on the computer, so it will be able to run locally.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-through-docker&#34;&gt;&lt;strong&gt;2. Through Docker&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;All formulas can run regardless the programming language used from the moment you have &lt;strong&gt;&lt;code&gt;DOCKER&lt;/code&gt;&lt;/strong&gt; installed and running.&lt;/p&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

For more information about this execution, check out the &lt;a href=&#34;http://docs.devritchiecli.io/formulas/hello-world-formula/&#34;&gt;&lt;strong&gt;&amp;ldquo;Hello World&amp;rdquo; formula section&lt;/strong&gt; &lt;/a&gt;.
&lt;/div&gt;



&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;

&lt;p&gt;&lt;strong&gt;Docker user on MacOS:&lt;/strong&gt;
To avoid the &lt;strong&gt;&amp;lsquo;Error: exit status 1&amp;rsquo;&lt;/strong&gt;, you have to &lt;strong&gt;disable&lt;/strong&gt; the Cloud Experience, depending on your version.&lt;/p&gt;
&lt;p&gt;See how:
Access on Docker:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Preferences &amp;gt; Command Line&amp;gt; Enable cloud experience.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://docs.devritchiecli.io/shared/ios-docker.PNG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;

&lt;/div&gt;

&lt;h3 id=&#34;3-local--docker-flags&#34;&gt;&lt;strong&gt;3. Local &amp;amp; Docker Flags&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;You can force Ritchie CLI to execute a formula with a specific method using flags.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;strong&gt;&lt;code&gt;--local&lt;/code&gt;&lt;/strong&gt; flag will execute a formula with locally (if the default method is Docker).&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;&lt;code&gt;--docker&lt;/code&gt;&lt;/strong&gt; flag will execute a formula with Docker (if the default method is local).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-containers-with-ritchie&#34;&gt;4. Containers with Ritchie&lt;/h3&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;

All formulas templates contain a &lt;strong&gt;Dockerfile&lt;/strong&gt; which creates a container with &lt;strong&gt;Ritchie CLI&lt;/strong&gt; installed.
&lt;/div&gt;

&lt;h2 id=&#34;next-steps&#34;&gt;&lt;strong&gt;Next steps&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;To keep learning about formulas:&lt;/p&gt;
&lt;p&gt;👉 Go to &lt;a href=&#34;http://docs.devritchiecli.io/formulas/hello-world-formula/&#34;&gt;&lt;strong&gt;Hello World formula&lt;/strong&gt;&lt;/a&gt; to see different ways to run a formula on Ritchie.&lt;/p&gt;
&lt;p&gt;👉 Go to the &lt;a href=&#34;http://docs.devritchiecli.io/formulas/create-formulas/&#34;&gt;&lt;strong&gt;create formulas&lt;/strong&gt;&lt;/a&gt; section to understand how to create your first automation with Ritchie.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Formulas: Hello World formula</title>
      <link>http://docs.devritchiecli.io/formulas/hello-world-formula/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://docs.devritchiecli.io/formulas/hello-world-formula/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;h2 id=&#34;hello-world&#34;&gt;&lt;strong&gt;Hello World&lt;/strong&gt;&lt;/h2&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;

Premisse: After you finished installing and initializing Ritchie - now you can  access the hello-world formula to test. You will need to add the &lt;a href=&#34;https://github.com/ZupIT/ritchie-formulas-demo&#34;&gt;&lt;strong&gt;ritchie-formulas-demo&lt;/strong&gt;&lt;/a&gt; repository locally.
&lt;/div&gt;

&lt;p&gt;To add the &lt;a href=&#34;https://github.com/ZupIT/ritchie-formulas-demo&#34;&gt;&lt;strong&gt;ritchie-formulas-demo&lt;/strong&gt;&lt;/a&gt; repository locally, you can use the &lt;strong&gt;&lt;code&gt;rit add repo&lt;/code&gt;&lt;/strong&gt; command, or run the command line below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;rit add repo --provider=&amp;#34;Github&amp;#34; --name=&amp;#34;demo&amp;#34; --repoUrl=&amp;#34;https://github.com/ZupIT/ritchie-formulas-demo&amp;#34; --priority=1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

You can also check which repositories you&amp;rsquo;re using with the &lt;strong&gt;&lt;code&gt;rit list repo&lt;/code&gt;&lt;/strong&gt; command.
&lt;/div&gt;

&lt;p&gt;Now, check the details of the formula, you can execute this tutorial commands.&lt;/p&gt;
&lt;h2 id=&#34;premisse-check-the-formulas-details&#34;&gt;&lt;strong&gt;Premisse: Check the formula&amp;rsquo;s details&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;To get details about a formula, you can execute the command using with the &lt;strong&gt;&lt;code&gt;--help&lt;/code&gt;&lt;/strong&gt; flag:.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;rit demo hello-world --help
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It will return all the flags available for the command execution.&lt;/p&gt;
&lt;h2 id=&#34;scenarios&#34;&gt;&lt;strong&gt;Scenarios&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;On Ritchie, you have 6 possibilities to run a formula through these flags:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Via Prompt&lt;/li&gt;
&lt;li&gt;Via Prompt e Docker&lt;/li&gt;
&lt;li&gt;Via Input Flags&lt;/li&gt;
&lt;li&gt;Via Input Flags e Docker&lt;/li&gt;
&lt;li&gt;Via Stdin&lt;/li&gt;
&lt;li&gt;Via Stdin e Docker&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You can see them below, choose a case and type the following commands lines.&lt;/p&gt;
&lt;h3 id=&#34;option-1-with-prompt&#34;&gt;&lt;strong&gt;Option 1: With Prompt&lt;/strong&gt;&lt;/h3&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;

As this formula has been coded using Golang, it is necessary to have Golang installed on your computer to run it locally.
&lt;/div&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;rit demo hello-world
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Select an option for each input parameter and see how the magic works:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://docs.devritchiecli.io/shared/rit-helloworld-prompt.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;This is the default command line execution, that runs the formula locally using &lt;strong&gt;prompt&lt;/strong&gt; to inform the input parameters.&lt;/p&gt;
&lt;h3 id=&#34;option-2-with-prompt-and-docker&#34;&gt;&lt;strong&gt;Option 2: With Prompt and Docker&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;You can run the same command using the &lt;strong&gt;&amp;ndash;docker&lt;/strong&gt; flag pto execute it remotely (on a container), but still using &lt;strong&gt;prompt&lt;/strong&gt; to inform the inputs parameters:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;rit demo hello-world --docker
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;

Docker needs to be installed and running on your computer for this flag to work.
In that case, you won&amp;rsquo;t need to have Golang installed.
&lt;/div&gt;

&lt;h3 id=&#34;option-3-with-input-flags&#34;&gt;&lt;strong&gt;Option 3: With Input Flags&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;You can also run the command informing the inputs through flags (you can know which flags are available using the &lt;strong&gt;&lt;code&gt;--help&lt;/code&gt;&lt;/strong&gt; flag when executing a command). This way, inputs parameters are informed directly with the command line.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;rit demo hello-world --rit_input_text=&amp;#34;Dennis&amp;#34; --rit_input_boolean=true --rit_input_list=&amp;#34;everything&amp;#34; --rit_input_password=&amp;#34;Ritchie&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;option-4-with-input-flags-and-docker&#34;&gt;&lt;strong&gt;Option 4: With Input flags and Docker&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;When you combine both &lt;strong&gt;&lt;code&gt;input flags&lt;/code&gt;&lt;/strong&gt; and the &lt;strong&gt;&lt;code&gt;--docker&lt;/code&gt;&lt;/strong&gt; flag, it is possible to run a command remotely (on a container) with the input parameters directly informed on the command line:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;rit demo hello-world --rit_input_text=&amp;#34;Dennis&amp;#34; --rit_input_boolean=true --rit_input_list=&amp;#34;everything&amp;#34; --rit_input_password=&amp;#34;Ritchie&amp;#34; --docker
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;option-5-with-stdin&#34;&gt;&lt;strong&gt;Option 5: With Stdin&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;You can also run the command with the &lt;strong&gt;&lt;code&gt;--stdin&lt;/code&gt;&lt;/strong&gt; (Standard input) flag. This way, inputs parameters are also informed directly with the command line.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;echo &amp;#39;{&amp;#34;rit_input_text&amp;#34;:&amp;#34;Dennis&amp;#34;, &amp;#34;rit_input_boolean&amp;#34;:&amp;#34;true&amp;#34;, &amp;#34;rit_input_list&amp;#34;:&amp;#34;everything&amp;#34;, &amp;#34;rit_input_password&amp;#34;:&amp;#34;Ritchie&amp;#34;}&amp;#39; | rit demo hello-world --stdin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;

Ritchie uses the &lt;strong&gt;JSON&lt;/strong&gt; format to execute STDIN commands
&lt;/div&gt;

&lt;h3 id=&#34;option-6-with-stdin-and-docker&#34;&gt;&lt;strong&gt;Option 6: With Stdin and Docker&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;When you combine both &lt;strong&gt;&amp;ndash;stdin&lt;/strong&gt; and &lt;strong&gt;&amp;ndash;docker&lt;/strong&gt; flags, it is also possible to run a command remotely (on a container) with the input parameters directly informed on the command line:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;echo &amp;#39;{&amp;#34;rit_input_text&amp;#34;:&amp;#34;Dennis&amp;#34;, &amp;#34;rit_input_boolean&amp;#34;:&amp;#34;true&amp;#34;, &amp;#34;rit_input_list&amp;#34;:&amp;#34;everything&amp;#34;, &amp;#34;rit_input_password&amp;#34;:&amp;#34;Ritchie&amp;#34;}&amp;#39; | rit demo hello-world --stdin --docker
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

Take a look at the formulas repositories &lt;a href=&#34;https://github.com/ZupIT/ritchie-formulas&#34;&gt;&lt;strong&gt;(ex: ritchie-formulas)&lt;/strong&gt;&lt;/a&gt;.
Most of the community formulas are composed of a &lt;a href=&#34;https://github.com/ZupIT/ritchie-formulas#readme&#34;&gt;&lt;strong&gt;README&lt;/strong&gt;&lt;/a&gt; explaining what the command does and how to run it.
&lt;/div&gt;

&lt;h2 id=&#34;next-steps&#34;&gt;&lt;strong&gt;Next steps&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Check out how to &lt;a href=&#34;http://docs.devritchiecli.io/formulas/create-formulas/&#34;&gt;&lt;strong&gt;create a formula&lt;/strong&gt; &lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Formulas: Create formulas</title>
      <link>http://docs.devritchiecli.io/formulas/create-formulas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://docs.devritchiecli.io/formulas/create-formulas/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;h2 id=&#34;how-to-create&#34;&gt;&lt;strong&gt;How to create?&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;step-1-run-the-formula-creation-command&#34;&gt;&lt;strong&gt;Step 1: Run the formula creation command&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Run the following command to create a formula:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;rit create formula
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then, you&amp;rsquo;ll have to inform those inputs before running the formula:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The &lt;strong&gt;command&lt;/strong&gt; (following the &lt;strong&gt;pattern &lt;code&gt;rit + group + verb + noun&lt;/code&gt;&lt;/strong&gt; to respect the &lt;a href=&#34;http://docs.devritchiecli.io/reference/glossary/&#34;&gt;&lt;strong&gt;tree pattern&lt;/strong&gt;&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;The formula&amp;rsquo;s &lt;strong&gt;programming language&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The path&lt;/strong&gt; used to save formula&amp;rsquo;s files.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Example: &lt;code&gt;rit demo create formula&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://docs.devritchiecli.io/shared/rit_create_formula.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;step-2-test-your-formula&#34;&gt;&lt;strong&gt;Step 2: Test your formula&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;You can test the formula directly after its creation. That&amp;rsquo;s possible because the &lt;strong&gt;&lt;code&gt;rit create formula&lt;/code&gt;&lt;/strong&gt; command also builds the formula automatically (it generates the formula&amp;rsquo;s executable files and add them on &lt;strong&gt;.rit folder&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;In that case, the formula &lt;strong&gt;&amp;ldquo;Hello World&amp;rdquo; template&lt;/strong&gt; will be executed as you can see below:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://docs.devritchiecli.io/shared/rit_demo_hello-world.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;This template is composed of &lt;strong&gt;4 inputs parameters&lt;/strong&gt;, that represents the currently available kinds of inputs to use Ritchie:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A &lt;strong&gt;&lt;code&gt;sample text&lt;/code&gt;&lt;/strong&gt; variable&lt;/li&gt;
&lt;li&gt;A &lt;strong&gt;&lt;code&gt;sample list&lt;/code&gt;&lt;/strong&gt; of text variables&lt;/li&gt;
&lt;li&gt;A &lt;strong&gt;&lt;code&gt;sample boolean&lt;/code&gt;&lt;/strong&gt; variable&lt;/li&gt;
&lt;li&gt;A &lt;strong&gt;&lt;code&gt;sample password&lt;/code&gt;&lt;/strong&gt; variable&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;When you finished creating your formula, it will be built and sent to a specific repository according to the name of your workspace with the prefix &lt;strong&gt;&amp;ldquo;local&amp;rdquo;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; If we have a workspace with &lt;code&gt;Default&lt;/code&gt; name:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;{
    &amp;#34;Default&amp;#34;:&amp;#34;/home/user/ritchie-formula-local&amp;#34;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A repository associated to this workspace will be created on the &lt;strong&gt;&lt;code&gt;/home/user/.rit/repos&lt;/code&gt;&lt;/strong&gt; folder, and added on the &lt;strong&gt;&lt;code&gt;repositories.json&lt;/code&gt;&lt;/strong&gt; file.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;[
	{
		&amp;#34;provider&amp;#34;: &amp;#34;Local&amp;#34;,
		&amp;#34;name&amp;#34;: &amp;#34;local-default&amp;#34;,
		&amp;#34;version&amp;#34;: &amp;#34;0.0.0&amp;#34;,
		&amp;#34;url&amp;#34;: &amp;#34;local repository&amp;#34;,
		&amp;#34;priority&amp;#34;: 0,
		&amp;#34;isLocal&amp;#34;: true
	}
]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;next-steps&#34;&gt;&lt;strong&gt;Next steps&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Keep configuring your formula:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Go to &lt;a href=&#34;http://docs.devritchiecli.io/formulas/organize-the-formula-folder/&#34;&gt;&lt;strong&gt;organize the formula folder&lt;/strong&gt;&lt;/a&gt; to see how to organize the formulas you create.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Formulas: Organize the formula folder</title>
      <link>http://docs.devritchiecli.io/formulas/organize-the-formula-folder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://docs.devritchiecli.io/formulas/organize-the-formula-folder/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;h2 id=&#34;what-is-the-formula-folder&#34;&gt;&lt;strong&gt;What is the formula folder?&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;This folder contains the files with the formula&amp;rsquo;s behavior.&lt;/p&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;

The folder structure defines the command tree, so &lt;strong&gt;it&amp;rsquo;s not indicated to update&lt;/strong&gt; folders names or include more files and/or folders, &lt;strong&gt;if not&lt;/strong&gt; in the &lt;strong&gt;src/*.&lt;/strong&gt; folder.
&lt;/div&gt;

&lt;p&gt;Each programming language has its own specificities, but the formula&amp;rsquo;s structure is almost always the same, no matter what language is used, and will contain:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;File&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;config.json&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;File to configure the formula inputs.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;main file&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;File to extract local variables.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;pkg/formula file&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;File to implement the formula operation.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;Dockerfile&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;File to build docker images.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;README file&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;File to explain what the formula does.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;Makefile file&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;File to compile the formula&amp;rsquo;s code (&lt;em&gt;will be deprecated 03/2021&lt;/em&gt;).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;build.sh file&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;File to compile the formula&amp;rsquo;s code in shell.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;metadata.json file&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;File to tag the formula&amp;rsquo;s information.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;set_unmask.sh file&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;File used by the Makefile file.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;help.json files&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;File to configure formula helper messages on the CLI.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;You can find all &lt;a href=&#34;https://github.com/ZupIT/ritchie-formulas/tree/master/templates/create_formula/languages&#34;&gt;&lt;strong&gt;languages templates&lt;/strong&gt;&lt;/a&gt; on the &lt;a href=&#34;https://github.com/ZupIT/ritchie-formulas&#34;&gt;&lt;strong&gt;ritchie-formulas&lt;/strong&gt;&lt;/a&gt; repository.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;formula-folder-examples&#34;&gt;&lt;strong&gt;Formula folder examples&lt;/strong&gt;&lt;/h3&gt;
&lt;ul class=&#34;nav nav-tabs&#34; id=&#34;tabset-formulasorganize-the-formula-folder-1&#34; role=&#34;tablist&#34;&gt;&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link active&#34; href=&#34;#tabset-formulasorganize-the-formula-folder-1-0&#34; role=&#34;tab&#34; aria-controls=&#34;tabset-formulasorganize-the-formula-folder-1-0&#34; aria-selected=&#34;true&#34;&gt;Golang&lt;/a&gt;&lt;/li&gt;
	  
		&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link&#34; href=&#34;#tabset-formulasorganize-the-formula-folder-1-1&#34; role=&#34;tab&#34; aria-controls=&#34;tabset-formulasorganize-the-formula-folder-1-1&#34;&gt;Java&lt;/a&gt;&lt;/li&gt;
		&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link&#34; href=&#34;#tabset-formulasorganize-the-formula-folder-1-2&#34; role=&#34;tab&#34; aria-controls=&#34;tabset-formulasorganize-the-formula-folder-1-2&#34;&gt;Node&lt;/a&gt;&lt;/li&gt;
		&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link&#34; href=&#34;#tabset-formulasorganize-the-formula-folder-1-3&#34; role=&#34;tab&#34; aria-controls=&#34;tabset-formulasorganize-the-formula-folder-1-3&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
		&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link&#34; href=&#34;#tabset-formulasorganize-the-formula-folder-1-4&#34; role=&#34;tab&#34; aria-controls=&#34;tabset-formulasorganize-the-formula-folder-1-4&#34;&gt;Shell&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;div class=&#34;tab-content&#34; id=&#34;tabset-formulasorganize-the-formula-folder-1&#34;&gt;&lt;div id=&#34;tabset-formulasorganize-the-formula-folder-1-0&#34; class=&#34;tab-pane show active&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;tabset-formulasorganize-the-formula-folder-1-0&#34;&gt;

&lt;p&gt;&lt;p&gt;&lt;img src=&#34;http://docs.devritchiecli.io/shared/go.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;To change the formula&amp;rsquo;s behavior for this language, you&amp;rsquo;ll have at least to update the following files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;config.json:&lt;/strong&gt; Update the &lt;em&gt;&lt;strong&gt;inputs&lt;/strong&gt;&lt;/em&gt; configurations.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;main.go:&lt;/strong&gt; Extract the inputs and call the formula&amp;rsquo;s methods (coded on &lt;strong&gt;formula/*&lt;/strong&gt;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;formula/*:&lt;/strong&gt; Code the formula&amp;rsquo;s behavior.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;help.json:&lt;/strong&gt; Change command description message.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;div id=&#34;tabset-formulasorganize-the-formula-folder-1-1&#34; class=&#34;tab-pane&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;tabset-formulasorganize-the-formula-folder-1-1&#34;&gt;

&lt;p&gt;&lt;p&gt;&lt;img src=&#34;http://docs.devritchiecli.io/shared/java.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;To change the formula&amp;rsquo;s behavior for this language, you&amp;rsquo;ll have at least to update the following files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;config.json:&lt;/strong&gt; Update the &lt;em&gt;&lt;strong&gt;inputs&lt;/strong&gt;&lt;/em&gt; configurations.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;main.java:&lt;/strong&gt; Extract the inputs and call the formula&amp;rsquo;s methods (coded on &lt;strong&gt;formula/*&lt;/strong&gt;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;formula/*:&lt;/strong&gt; Code the formula&amp;rsquo;s behavior.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;help.json:&lt;/strong&gt; Change command description message.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;div id=&#34;tabset-formulasorganize-the-formula-folder-1-2&#34; class=&#34;tab-pane&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;tabset-formulasorganize-the-formula-folder-1-2&#34;&gt;

&lt;p&gt;&lt;p&gt;&lt;img src=&#34;http://docs.devritchiecli.io/shared/node.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;To change the formula&amp;rsquo;s behavior for this language, you&amp;rsquo;ll have at least to update the following files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;config.json:&lt;/strong&gt; Update the &lt;em&gt;&lt;strong&gt;inputs&lt;/strong&gt;&lt;/em&gt; configurations.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;index.js:&lt;/strong&gt; Extract the inputs and call the formula&amp;rsquo;s methods (coded on &lt;strong&gt;formula/*&lt;/strong&gt;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;formula/*:&lt;/strong&gt; Code the formula&amp;rsquo;s behavior.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;help.json:&lt;/strong&gt; Change command description message.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;div id=&#34;tabset-formulasorganize-the-formula-folder-1-3&#34; class=&#34;tab-pane&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;tabset-formulasorganize-the-formula-folder-1-3&#34;&gt;

&lt;p&gt;&lt;p&gt;&lt;img src=&#34;http://docs.devritchiecli.io/shared/python.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;To change the formula&amp;rsquo;s behavior for this language, you&amp;rsquo;ll have at least to update the following files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;config.json:&lt;/strong&gt; Update the &lt;em&gt;&lt;strong&gt;inputs&lt;/strong&gt;&lt;/em&gt; configurations.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;main.py:&lt;/strong&gt; Extract the inputs and call the formula&amp;rsquo;s methods (coded on &lt;strong&gt;formula/*&lt;/strong&gt;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;formula/*:&lt;/strong&gt; Code the formula&amp;rsquo;s behavior.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;help.json:&lt;/strong&gt; Change command description message.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;div id=&#34;tabset-formulasorganize-the-formula-folder-1-4&#34; class=&#34;tab-pane&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;tabset-formulasorganize-the-formula-folder-1-4&#34;&gt;

&lt;p&gt;&lt;p&gt;&lt;img src=&#34;http://docs.devritchiecli.io/shared/shell.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;To change the formula&amp;rsquo;s behavior for this language, you&amp;rsquo;ll have at least to update the following files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;config.json:&lt;/strong&gt; Update the &lt;em&gt;&lt;strong&gt;inputs&lt;/strong&gt;&lt;/em&gt; configurations.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;main.sh:&lt;/strong&gt; Extract the inputs and call the formula&amp;rsquo;s methods (coded on &lt;strong&gt;formula/*&lt;/strong&gt;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;formula/*:&lt;/strong&gt; Code the formula&amp;rsquo;s behavior.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;help.json:&lt;/strong&gt; Change command description message.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Formulas: Configure Inputs</title>
      <link>http://docs.devritchiecli.io/formulas/configure-inputs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://docs.devritchiecli.io/formulas/configure-inputs/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;h2 id=&#34;what-is-the-configjson-file&#34;&gt;&lt;strong&gt;What is the config.json file?&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;strong&gt;config.json&lt;/strong&gt; file contains the formula&amp;rsquo;s input parameters. It allows the CLI to know what data to ask the user when he runs the command in the terminal to process the formula correctly.&lt;/p&gt;
&lt;p&gt;These input parameters are made up of the following fields:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;dockerImageBuilder&lt;/strong&gt;: A docker image builder (according to the programming language chose at the formula creation).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dockerVolumes&lt;/strong&gt;: List of local volumes you want to mount in the docker run container.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;inputs&lt;/strong&gt;: The formula inputs parameters list.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;requireLatestVersion&lt;/strong&gt;: A boolean, indicating the need (or not) of the formula to run in the last available version of a repository.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;{
  &amp;#34;dockerImageBuilder&amp;#34;: &amp;#34;dockerImage&amp;#34;,
  &amp;#34;dockerVolumes&amp;#34;: [],
  &amp;#34;inputs&amp;#34;: [],
  &amp;#34;requireLatestVersion&amp;#34;: false,
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;docker-volume-mapping-configuration&#34;&gt;&lt;strong&gt;Docker volume mapping configuration&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;For each volume that will be mapped, you must inform its origin and destination, using a colon &lt;strong&gt;&amp;quot;:&amp;quot;&lt;/strong&gt; as a separator.&lt;/p&gt;
&lt;h4 id=&#34;example&#34;&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;The source directory being &lt;strong&gt;&lt;code&gt;/home/user-name/folder&lt;/code&gt;&lt;/strong&gt; and the destination directory &lt;strong&gt;&lt;code&gt;/mount/folder&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;{
    &amp;#34;dockerVolumes&amp;#34;: [
        &amp;#34;/home/user-name/folder:/mount/folder&amp;#34;
    ],
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;input-parameter-configuration&#34;&gt;&lt;strong&gt;Input parameter configuration&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Each input parameter is composed of the following fields:&lt;/p&gt;
&lt;h3 id=&#34;mandatory-fields&#34;&gt;&lt;strong&gt;Mandatory fields&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt;: variable name to extract.&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;

&lt;p&gt;Once an input value is informed on Ritchie CLI, it is saved as a &lt;strong&gt;local variable&lt;/strong&gt; during the formula execution.&lt;/p&gt;
&lt;p&gt;The variable &lt;strong&gt;name&lt;/strong&gt; will be convert &lt;strong&gt;uppercase&lt;/strong&gt; as the &lt;strong&gt;local variable name&lt;/strong&gt;.&lt;/p&gt;

&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;A good practice is to add a &lt;strong&gt;_&lt;code&gt;RIT_&lt;/code&gt;&lt;/strong&gt; suffix to each &lt;strong&gt;&lt;code&gt;input name&lt;/code&gt;&lt;/strong&gt; to avoid having conflicts with local variables.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example: &lt;code&gt;rit_file_name&lt;/code&gt; &amp;ndash;&amp;gt; &lt;code&gt;RIT_FILE_NAME&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;type&lt;/code&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;text&lt;/strong&gt; &lt;em&gt;(string)&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;bool&lt;/strong&gt; &lt;em&gt;(boolean)&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;password&lt;/strong&gt; &lt;em&gt;(hidden string on CLI)&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;multiselect&lt;/strong&gt; list predefined values, it is possible to select multiple values &lt;em&gt;(string)&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;credentials&lt;/strong&gt; &lt;em&gt;(specific type, check out more on &lt;a href=&#34;http://docs.devritchiecli.io/credentials/use-credentials-as-formula-inputs/&#34;&gt;&lt;strong&gt;use crendential as formula inputs&lt;/strong&gt;&lt;/a&gt;)&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dynamic&lt;/strong&gt; &lt;em&gt;(associated with the optional &lt;code&gt;request_info&lt;/code&gt; field below)&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;path:&lt;/strong&gt; enables the autocomplete to inform a path to a folder or a file &lt;em&gt;(string)&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;label&lt;/code&gt;: text appearing on the CLI, asking for the input.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;input-example-with-mandatory-fields&#34;&gt;&lt;strong&gt;Input example with mandatory fields:&lt;/strong&gt;&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;{
      &amp;#34;label&amp;#34;: &amp;#34;Type your name:&amp;#34;,
      &amp;#34;name&amp;#34;: &amp;#34;rit_name&amp;#34;,
      &amp;#34;type&amp;#34;: &amp;#34;text&amp;#34;,
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;input-example-with-the-multiselect-type&#34;&gt;&lt;strong&gt;Input example with the multiselect type:&lt;/strong&gt;&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;{
      &amp;#34;label&amp;#34;: &amp;#34;Choose one or more days: &amp;#34;,
      &amp;#34;name&amp;#34;: &amp;#34;rit_days&amp;#34;,
      &amp;#34;type&amp;#34;: &amp;#34;multiselect&amp;#34;,
      &amp;#34;required&amp;#34;: true,
      &amp;#34;items&amp;#34;: [
           &amp;#34;Monday&amp;#34;,
           &amp;#34;Tuesday&amp;#34;,
           &amp;#34;Wednesday&amp;#34;,
           &amp;#34;Thursday&amp;#34;,
           &amp;#34;Friday&amp;#34;,
           &amp;#34;Saturday&amp;#34;,
           &amp;#34;Friday&amp;#34;
      ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;some-observations-regarding-the-multiselect-type&#34;&gt;&lt;strong&gt;Some observations regarding the &lt;strong&gt;&lt;code&gt;multiselect&lt;/code&gt;&lt;/strong&gt; type&lt;/strong&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;To select one of the options with the &lt;code&gt;multiselect&lt;/code&gt; type,&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Press the &lt;code&gt;space&lt;/code&gt; key (the &lt;code&gt;enter&lt;/code&gt; key will move to the next input, if any).&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;The options selected in the &lt;code&gt;multiselect&lt;/code&gt; type field will return a string with:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;The options separated by pipe (&lt;code&gt;|&lt;/code&gt;) and without space example: &lt;code&gt;Monday | Wednesday | Friday&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Use the &lt;code&gt;required&lt;/code&gt; field as &lt;code&gt;true&lt;/code&gt;, otherwise, if no option is selected, the local variable will be saved as &lt;code&gt;undefined&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;parameter-example-using-the-autocomplete-type&#34;&gt;&lt;strong&gt;Parameter example using the autocomplete type:&lt;/strong&gt;&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;{
      &amp;#34;label&amp;#34;: &amp;#34;Type the path to the folder with your file:&amp;#34;,
      &amp;#34;name&amp;#34;: &amp;#34;rit_path&amp;#34;,
      &amp;#34;type&amp;#34;: &amp;#34;path&amp;#34;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;optional-fields&#34;&gt;&lt;strong&gt;Optional fields&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;default&lt;/code&gt;: default input value (if value is &lt;strong&gt;null&lt;/strong&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;{
      &amp;#34;label&amp;#34;: &amp;#34;Type your name:&amp;#34;,
      &amp;#34;name&amp;#34;: &amp;#34;rit_name&amp;#34;,
      &amp;#34;type&amp;#34;: &amp;#34;text&amp;#34;,
      &amp;#34;default&amp;#34;: &amp;#34;Dennis&amp;#34;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

&lt;p&gt;You also can make this default configuration with the default flag, which allows you to attribute default values configured on the formula.&lt;/p&gt;
&lt;p&gt;In case of fields without a default value, the flag will keep asking for this inputs that must be configured on your config.json file.&lt;/p&gt;

&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;required&lt;/code&gt;: Boolean that indicates if the input value is required or optional.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;{
      &amp;#34;label&amp;#34;: &amp;#34;Type your name:&amp;#34;,
      &amp;#34;name&amp;#34;: &amp;#34;rit_name&amp;#34;,
      &amp;#34;type&amp;#34;: &amp;#34;text&amp;#34;,
      &amp;#34;required&amp;#34;: true
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tutorial&lt;/code&gt;: Input helper message &lt;em&gt;[? for help]&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;{
      &amp;#34;label&amp;#34;: &amp;#34;Type your name:&amp;#34;,
      &amp;#34;name&amp;#34;: &amp;#34;rit_name&amp;#34;,
      &amp;#34;type&amp;#34;: &amp;#34;text&amp;#34;,
      &amp;#34;tutorial&amp;#34;: &amp;#34;We are expecting you to write your name (ex: John)&amp;#34;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;items&lt;/code&gt;: List of input variable options.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;{
      &amp;#34;label&amp;#34;: &amp;#34;Type your name:&amp;#34;,
      &amp;#34;name&amp;#34;: &amp;#34;rit_name&amp;#34;,
      &amp;#34;type&amp;#34;: &amp;#34;text&amp;#34;,
      &amp;#34;items&amp;#34;: [
            &amp;#34;Dennis&amp;#34;,
            &amp;#34;John&amp;#34;,
            &amp;#34;Bill&amp;#34;
      ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cache&lt;/code&gt;: Saves former input values.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;active&lt;/code&gt;: If the cache is enabled or not.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;qty&lt;/code&gt;: Amount of values to store.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;newLabel&lt;/code&gt;: Text appearing on the CLI asking for new input.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;{
      &amp;#34;label&amp;#34;: &amp;#34;Type your name:&amp;#34;,
      &amp;#34;name&amp;#34;: &amp;#34;rit_name&amp;#34;,
      &amp;#34;type&amp;#34;: &amp;#34;text&amp;#34;,
      &amp;#34;cache&amp;#34;: {
            &amp;#34;active&amp;#34;: true,
            &amp;#34;qty&amp;#34;: 5,
            &amp;#34;newLabel&amp;#34;: &amp;#34;Type another name:&amp;#34;
      }
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;condition&lt;/code&gt;: It shows an input if the given condition succeeds.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;variable&lt;/code&gt;: The variable name used on a previous input for comparison.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;operator&lt;/code&gt;: A logical operator to compare. Supports &lt;strong&gt;&lt;code&gt;==&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;!=&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;&amp;lt;=&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;&amp;gt;=&lt;/code&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;value&lt;/code&gt;: The desired value to compare to.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;{
      &amp;#34;label&amp;#34;: &amp;#34;Type your name:&amp;#34;,
      &amp;#34;name&amp;#34;: &amp;#34;rit_name&amp;#34;,
      &amp;#34;type&amp;#34;: &amp;#34;text&amp;#34;,
      &amp;#34;default&amp;#34;: &amp;#34;Dennis&amp;#34;
},
{
      &amp;#34;condition&amp;#34;: {
            &amp;#34;variable&amp;#34;: &amp;#34;rit_name&amp;#34;,
            &amp;#34;operator&amp;#34;: &amp;#34;!=&amp;#34;,
            &amp;#34;value&amp;#34;: &amp;#34;Dennis&amp;#34;
      }
      &amp;#34;label&amp;#34;: &amp;#34;What is your date of birth?&amp;#34;,
      &amp;#34;name&amp;#34;: &amp;#34;rit_date_of_birth&amp;#34;,
      &amp;#34;type&amp;#34;: &amp;#34;text&amp;#34;,
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pattern&lt;/code&gt;: Configure the input value validation.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;regex&lt;/code&gt;: The regex pattern to validate the input.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mismatchText&lt;/code&gt;: An error message when the input doesn&amp;rsquo;t match the regex pattern.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;{
      &amp;#34;label&amp;#34;: &amp;#34;What is your age&amp;#34;,
      &amp;#34;name&amp;#34;: &amp;#34;rit_age&amp;#34;,
      &amp;#34;type&amp;#34;: &amp;#34;text&amp;#34;,
      &amp;#34;pattern&amp;#34;: {
            &amp;#34;regex&amp;#34;: &amp;#34;[0-9]&amp;#34;,
            &amp;#34;mismatchText&amp;#34;: &amp;#34;Only a integer value is allowed here (ex: 20)&amp;#34;
      }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;

The &lt;strong&gt;&lt;code&gt;dynamic input&lt;/code&gt;&lt;/strong&gt; type will be &lt;strong&gt;deprecated&lt;/strong&gt; in the &lt;strong&gt;next releases&lt;/strong&gt;.
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;requestInfo&lt;/code&gt;: A configuration to get the dynamic input type.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;url&lt;/code&gt;: An URL to consume a GET service that will return a list of objects.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jsonPath&lt;/code&gt;: A JSON path where the variable extracts a returned list for every object, see &lt;code&gt;&amp;quot;jsonPath&amp;quot;: $[&#39;user&#39;][&#39;name&#39;]&lt;/code&gt; (Check out &lt;a href=&#34;https://goessner.net/articles/JsonPath/&#34;&gt;&lt;strong&gt;how the JSON path works&lt;/strong&gt;&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;{
      &amp;#34;label&amp;#34;: &amp;#34;Type your name:&amp;#34;,
      &amp;#34;name&amp;#34;: &amp;#34;rit_name&amp;#34;,
      &amp;#34;type&amp;#34;: &amp;#34;text&amp;#34;,
      &amp;#34;requestInfo&amp;#34;: {
            &amp;#34;url&amp;#34;: &amp;#34;https://my-url.com&amp;#34;,
            &amp;#34;jsonPath&amp;#34;: $[&amp;#39;user&amp;#39;][&amp;#39;name&amp;#39;]
      }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

Each formula can contain as many inputs as necessary, as well as any association of the above fields.
&lt;/div&gt;

&lt;h3 id=&#34;conditional-input-example-with-regex-pattern&#34;&gt;&lt;strong&gt;Conditional input example with Regex pattern:&lt;/strong&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&amp;#34;inputs&amp;#34;: [
    {
      &amp;#34;label&amp;#34;: &amp;#34;Select a system:&amp;#34;,
      &amp;#34;name&amp;#34;: &amp;#34;rit_system&amp;#34;,
      &amp;#34;type&amp;#34;: &amp;#34;text&amp;#34;,
      &amp;#34;items&amp;#34;: [
        &amp;#34;LINUX&amp;#34;,
        &amp;#34;MACOS&amp;#34;,
        &amp;#34;WINDOWS&amp;#34;
      ],
      &amp;#34;required&amp;#34;: true,
      &amp;#34;tutorial&amp;#34;: &amp;#34;Select a System from the list.&amp;#34;
    },
    {
      &amp;#34;condition&amp;#34;: {
        &amp;#34;variable&amp;#34;:&amp;#34;rit_system&amp;#34;,
        &amp;#34;operator&amp;#34;:&amp;#34;==&amp;#34;,
        &amp;#34;value&amp;#34;:&amp;#34;LINUX&amp;#34;
      },
      &amp;#34;label&amp;#34;: &amp;#34;Select a LINUX OS:&amp;#34;,
      &amp;#34;name&amp;#34;: &amp;#34;rit_linux_os&amp;#34;,
      &amp;#34;type&amp;#34;: &amp;#34;text&amp;#34;,
      &amp;#34;items&amp;#34;: [
        &amp;#34;UBUNTU&amp;#34;,
        &amp;#34;FEDORA&amp;#34;,
        &amp;#34;CENTOS&amp;#34;
      ],
      &amp;#34;pattern&amp;#34;: {
        &amp;#34;regex&amp;#34;: &amp;#34;UBUNTU|FEDORA|CENTOS&amp;#34;,
        &amp;#34;mismatchText&amp;#34;: &amp;#34;Invalid option&amp;#34;
      },
      &amp;#34;required&amp;#34;: false,
      &amp;#34;tutorial&amp;#34;: &amp;#34;Select an Linux Operating System from the list.&amp;#34;
    }
  ]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;

Once an input is informed on Ritchie CLI, it is saved as a &lt;strong&gt;local variable&lt;/strong&gt; during the formula execution.
&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>Formulas: Extract input variables in a formula</title>
      <link>http://docs.devritchiecli.io/formulas/extract-input-variables-in-a-formula/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://docs.devritchiecli.io/formulas/extract-input-variables-in-a-formula/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;h2 id=&#34;what-is-the-main-file&#34;&gt;&lt;strong&gt;What is the main file?&lt;/strong&gt;&lt;/h2&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

&lt;p&gt;The main file is used to extract the &lt;strong&gt;inputs&lt;/strong&gt; asked in the config.json file, saved as &lt;strong&gt;local variables.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Inputs are extracted by the field &lt;strong&gt;name&lt;/strong&gt; informed on the config.json file &lt;strong&gt;UPPERCASE&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;p&gt;This file is also where the formula functions, manipulating the input parameters, are called to perform the operation and/or automation of the formula.&lt;/p&gt;
&lt;h3 id=&#34;main-file-examples&#34;&gt;Main file examples&lt;/h3&gt;
&lt;p&gt;Check out the examples below, there is always an existing &lt;strong&gt;&lt;code&gt;formula&lt;/code&gt;&lt;/strong&gt; class with a &lt;strong&gt;&lt;code&gt;Run()&lt;/code&gt;&lt;/strong&gt; function:&lt;/p&gt;
&lt;ul class=&#34;nav nav-tabs&#34; id=&#34;t1&#34; role=&#34;tablist&#34;&gt;&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link active&#34; href=&#34;#t1-0&#34; role=&#34;tab&#34; aria-controls=&#34;t1-0&#34; aria-selected=&#34;true&#34;&gt;main.go&lt;/a&gt;&lt;/li&gt;
	  
		&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link&#34; href=&#34;#t1-1&#34; role=&#34;tab&#34; aria-controls=&#34;t1-1&#34;&gt;Main.java&lt;/a&gt;&lt;/li&gt;
		&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link&#34; href=&#34;#t1-2&#34; role=&#34;tab&#34; aria-controls=&#34;t1-2&#34;&gt;index.js&lt;/a&gt;&lt;/li&gt;
		&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link&#34; href=&#34;#t1-3&#34; role=&#34;tab&#34; aria-controls=&#34;t1-3&#34;&gt;main.py&lt;/a&gt;&lt;/li&gt;
		&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link&#34; href=&#34;#t1-4&#34; role=&#34;tab&#34; aria-controls=&#34;t1-4&#34;&gt;main.sh&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;div class=&#34;tab-content&#34; id=&#34;t1&#34;&gt;&lt;div id=&#34;t1-0&#34; class=&#34;tab-pane show active&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t1-0&#34;&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;func main() {
	input1 := os.Getenv(&amp;#34;INPUT_TEXT&amp;#34;)
	input2 := os.Getenv(&amp;#34;INPUT_LIST&amp;#34;)
	input3, _ := strconv.ParseBool(os.Getenv(&amp;#34;INPUT_BOOLEAN&amp;#34;))
	input4 := os.Getenv(&amp;#34;INPUT_PASSWORD&amp;#34;)

	formula.Formula{
		Text:     input1,
		List:     input2,
		Boolean:  input3,
		Password: input4,
	}.Run(os.Stdout)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
  &lt;div id=&#34;t1-1&#34; class=&#34;tab-pane&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t1-1&#34;&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;public class Main {

  public static void main(String[] args) {

    String inputText = System.getenv(&amp;#34;INPUT_TEXT&amp;#34;);
    boolean inputBoolean = Boolean.parseBoolean(System.getenv(&amp;#34;INPUT_BOOLEAN&amp;#34;));
    String inputList = System.getenv(&amp;#34;INPUT_LIST&amp;#34;);
    String inputPassword = System.getenv(&amp;#34;INPUT_PASSWORD&amp;#34;);

    Formula formula = new Formula(
      inputText, 
      inputBoolean, 
      inputList, 
      inputPassword
    );
    
    formula.Run();
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
  &lt;div id=&#34;t1-2&#34; class=&#34;tab-pane&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t1-2&#34;&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;const INPUT1 = process.env.INPUT_TEXT
const INPUT2 = process.env.INPUT_BOOLEAN
const INPUT3 = process.env.INPUT_LIST
const INPUT4 = process.env.INPUT_PASSWORD

run(INPUT1, INPUT2, INPUT3, INPUT4)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
  &lt;div id=&#34;t1-3&#34; class=&#34;tab-pane&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t1-3&#34;&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;input1 = os.environ.get(&amp;#34;INPUT_TEXT&amp;#34;)
input2 = os.environ.get(&amp;#34;INPUT_BOOLEAN&amp;#34;)
input3 = os.environ.get(&amp;#34;INPUT_LIST&amp;#34;)
input4 = os.environ.get(&amp;#34;INPUT_PASSWORD&amp;#34;)

formula.Run(input1, input2, input3, input4)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
  &lt;div id=&#34;t1-4&#34; class=&#34;tab-pane&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t1-4&#34;&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;//Inputs are not even necessary here, as Shellscript get values from local variables directly.

runFormula &amp;#39;$SAMPLE_TEXT&amp;#39; $SAMPLE_LIST &amp;#39;$SAMPLE_BOOL&amp;#39;&amp;#39;$SAMPLE_PASSWORD&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Formulas: Add formula dependencies</title>
      <link>http://docs.devritchiecli.io/formulas/add-formula-dependencies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://docs.devritchiecli.io/formulas/add-formula-dependencies/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;h2 id=&#34;how-to-add-formula-dependencies&#34;&gt;&lt;strong&gt;How to add formula dependencies?&lt;/strong&gt;&lt;/h2&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

Each programming language has its own specificities &lt;strong&gt;to import libraries or packages&lt;/strong&gt;.
&lt;/div&gt;

&lt;p&gt;On Ritchie, it&amp;rsquo;s possible to configure each formula as an independent and small project.&lt;/p&gt;
&lt;p&gt;Therefore, it will be possible to import all the necessary dependencies to perform the operations you want to implement. See more below:&lt;/p&gt;
&lt;ul class=&#34;nav nav-tabs&#34; id=&#34;t2&#34; role=&#34;tablist&#34;&gt;&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link active&#34; href=&#34;#t2-0&#34; role=&#34;tab&#34; aria-controls=&#34;t2-0&#34; aria-selected=&#34;true&#34;&gt;go.mod (GOLANG)&lt;/a&gt;&lt;/li&gt;
	  
		&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link&#34; href=&#34;#t2-1&#34; role=&#34;tab&#34; aria-controls=&#34;t2-1&#34;&gt;pom.xml (JAVA)&lt;/a&gt;&lt;/li&gt;
		&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link&#34; href=&#34;#t2-2&#34; role=&#34;tab&#34; aria-controls=&#34;t2-2&#34;&gt;package.json (NODE)&lt;/a&gt;&lt;/li&gt;
		&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link&#34; href=&#34;#t2-3&#34; role=&#34;tab&#34; aria-controls=&#34;t2-3&#34;&gt;requirements.txt (PYTHON)&lt;/a&gt;&lt;/li&gt;
		&lt;li class=&#34;nav-item&#34;&gt;&lt;a data-toggle=&#34;tab&#34; class=&#34;nav-link&#34; href=&#34;#t2-4&#34; role=&#34;tab&#34; aria-controls=&#34;t2-4&#34;&gt;composer.json (PHP)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;div class=&#34;tab-content&#34; id=&#34;t2&#34;&gt;&lt;div id=&#34;t2-0&#34; class=&#34;tab-pane show active&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t2-0&#34;&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;module formula

go 1.14

require (
    github.com/gookit/color v1.2.5
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
  &lt;div id=&#34;t2-1&#34; class=&#34;tab-pane&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t2-1&#34;&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;
&amp;lt;project xmlns=&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;
         xsi:schemaLocation=&amp;#34;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&amp;gt;
    &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;

    &amp;lt;groupId&amp;gt;com.ritchie&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;formula&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;1.0-SNAPSHOT&amp;lt;/version&amp;gt;

    &amp;lt;properties&amp;gt;
        &amp;lt;java.version&amp;gt;1.8&amp;lt;/java.version&amp;gt;
        &amp;lt;maven.compiler.source&amp;gt;${java.version}&amp;lt;/maven.compiler.source&amp;gt;
        &amp;lt;maven.compiler.target&amp;gt;${java.version}&amp;lt;/maven.compiler.target&amp;gt;
        &amp;lt;project.build.sourceEncoding&amp;gt;UTF-8&amp;lt;/project.build.sourceEncoding&amp;gt;
        &amp;lt;maven-jar-plugin.version&amp;gt;3.2.0&amp;lt;/maven-jar-plugin.version&amp;gt;
    &amp;lt;/properties&amp;gt;

    &amp;lt;build&amp;gt;
        &amp;lt;finalName&amp;gt;Main&amp;lt;/finalName&amp;gt;
        &amp;lt;plugins&amp;gt;
            &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;3.8.1&amp;lt;/version&amp;gt;
                &amp;lt;configuration&amp;gt;
                    &amp;lt;source&amp;gt;1.8&amp;lt;/source&amp;gt;
                    &amp;lt;target&amp;gt;1.8&amp;lt;/target&amp;gt;
                &amp;lt;/configuration&amp;gt;
            &amp;lt;/plugin&amp;gt;
            &amp;lt;plugin&amp;gt;
                &amp;lt;!-- Build an executable JAR --&amp;gt;
                &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;maven-jar-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;${maven-jar-plugin.version}&amp;lt;/version&amp;gt;
                &amp;lt;configuration&amp;gt;
                    &amp;lt;archive&amp;gt;
                        &amp;lt;manifest&amp;gt;
                            &amp;lt;!-- &amp;lt;addClasspath&amp;gt;true&amp;lt;/addClasspath&amp;gt; --&amp;gt;
                            &amp;lt;mainClass&amp;gt;com.ritchie.Main&amp;lt;/mainClass&amp;gt;
                        &amp;lt;/manifest&amp;gt;
                    &amp;lt;/archive&amp;gt;
                &amp;lt;/configuration&amp;gt;
            &amp;lt;/plugin&amp;gt;
            &amp;lt;plugin&amp;gt;
                &amp;lt;artifactId&amp;gt;maven-assembly-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;configuration&amp;gt;
                    &amp;lt;appendAssemblyId&amp;gt;false&amp;lt;/appendAssemblyId&amp;gt;
                    &amp;lt;archive&amp;gt;
                        &amp;lt;manifest&amp;gt;
                            &amp;lt;mainClass&amp;gt;com.ritchie.Main&amp;lt;/mainClass&amp;gt;
                        &amp;lt;/manifest&amp;gt;
                    &amp;lt;/archive&amp;gt;
                    &amp;lt;descriptorRefs&amp;gt;
                        &amp;lt;descriptorRef&amp;gt;jar-with-dependencies&amp;lt;/descriptorRef&amp;gt;
                    &amp;lt;/descriptorRefs&amp;gt;
                &amp;lt;/configuration&amp;gt;
                &amp;lt;executions&amp;gt;
                    &amp;lt;execution&amp;gt;
                        &amp;lt;id&amp;gt;make-assembly&amp;lt;/id&amp;gt;
                        &amp;lt;phase&amp;gt;package&amp;lt;/phase&amp;gt;
                        &amp;lt;goals&amp;gt;
                            &amp;lt;goal&amp;gt;single&amp;lt;/goal&amp;gt;
                        &amp;lt;/goals&amp;gt;
                    &amp;lt;/execution&amp;gt;
                &amp;lt;/executions&amp;gt;
            &amp;lt;/plugin&amp;gt;
        &amp;lt;/plugins&amp;gt;
    &amp;lt;/build&amp;gt;

    &amp;lt;dependencies&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;junit&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;junit&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;4.13.1&amp;lt;/version&amp;gt;
            &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;com.github.tomas-langer&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;chalk&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;1.0.2&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
    &amp;lt;/dependencies&amp;gt;
&amp;lt;/project&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
  &lt;div id=&#34;t2-2&#34; class=&#34;tab-pane&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t2-2&#34;&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;{
  &amp;#34;dependencies&amp;#34;: {
    &amp;#34;cli-color&amp;#34;: &amp;#34;^2.0.0&amp;#34;
  },
  &amp;#34;main&amp;#34;: &amp;#34;index.js&amp;#34;,
  &amp;#34;scripts&amp;#34;: {
    &amp;#34;test&amp;#34;: &amp;#34;echo \&amp;#34;Error: no test specified\&amp;#34; &amp;amp;&amp;amp; exit 1&amp;#34;
  },
  &amp;#34;version&amp;#34;: &amp;#34;1.0.0&amp;#34;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
  &lt;div id=&#34;t2-3&#34; class=&#34;tab-pane&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t2-3&#34;&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;colored==1.4.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
  &lt;div id=&#34;t2-4&#34; class=&#34;tab-pane&#34; role=&#34;tabpanel&#34; aria-labelledby=&#34;t2-4&#34;&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;{
  &amp;#34;require&amp;#34;: {
    &amp;#34;codedungeon/php-cli-colors&amp;#34;: &amp;#34;~1.0&amp;#34;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Formulas: Build formulas</title>
      <link>http://docs.devritchiecli.io/formulas/build-formulas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://docs.devritchiecli.io/formulas/build-formulas/</guid>
      <description>
        
        
        &lt;hr&gt;


&lt;div class=&#34;alert alert-danger&#34; role=&#34;alert&#34;&gt;

&lt;p&gt;This functionality is no longer available from &lt;strong&gt;Ritchie&amp;rsquo;s 2.5.0 version&lt;/strong&gt;. From now on, a formula build is automatically made on your CLI: a local repo file will be created as soon as you implement the formula to host it.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re using a previous version just follow the instructions of this section.&lt;/p&gt;

&lt;/div&gt;

&lt;h2 id=&#34;how-to-build&#34;&gt;&lt;strong&gt;How to build?&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;After &lt;a href=&#34;http://docs.devritchiecli.io/formulas/create-formulas/&#34;&gt;&lt;strong&gt;creating a formula&lt;/strong&gt;&lt;/a&gt;, if you want to edit the code of the formula, it&amp;rsquo;s necessary to &lt;strong&gt;build&lt;/strong&gt; these changes to test the command with the new implementation.&lt;/p&gt;
&lt;p&gt;To do so, run the command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;rit build formula
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You must inform:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;strong&gt;directory&amp;rsquo;s path&lt;/strong&gt; where the formula is located.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;formula&amp;rsquo;s path&lt;/strong&gt; to be builded (the formula&amp;rsquo;s command).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you want to update the formula&amp;rsquo;s code in running time, you can use the &lt;strong&gt;flag “&amp;ndash;watch”&lt;/strong&gt; like in the command below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;rit build formula --watch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Formulas: Workspaces</title>
      <link>http://docs.devritchiecli.io/formulas/workspaces/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://docs.devritchiecli.io/formulas/workspaces/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;h2 id=&#34;what-is-the-difference-between-workspace-and-repository&#34;&gt;&lt;strong&gt;What is the difference between workspace and repository?&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Repositories and workspaces are used to interact with formulas on Ritchie, but the way they work is different, check out:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;workspace&lt;/code&gt;&lt;/strong&gt; You can use workspace commands to develop, edit and test formulas &lt;code&gt;locally&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;repository&lt;/code&gt;&lt;/strong&gt; You can use repository commands to import formulas from &lt;code&gt;Git repositories&lt;/code&gt; and execute them.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;See an example to add a repository on the &lt;a href=&#34;http://docs.devritchiecli.io/formulas/hello-world-formula/&#34;&gt;&lt;strong&gt;Hello World Formula&lt;/strong&gt;&lt;/a&gt; page.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Commands for repos and workspaces are similar, they allow the CLI to &amp;ldquo;see&amp;rdquo; available formulas on your local machine. Workspaces have &lt;strong&gt;higher priority&lt;/strong&gt; than Repos, for example, if you use both commands for the same formulas&#39; repositories, the workspaces&#39; formulas will be executed.&lt;/p&gt;
&lt;p&gt;For more information about workspace and repositories commands, check out &lt;a href=&#34;http://docs.devritchiecli.io/reference/list-of-commands-and-flags/&#34;&gt;&lt;strong&gt;the list of commands and flags&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;how-to-add&#34;&gt;&lt;strong&gt;How to add?&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Follow the next steps:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Run this command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;rit add workspace
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Enter the requested input:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1: Inform the workspace name (don&amp;rsquo;t use &lt;em&gt;spaces&lt;/em&gt; or &lt;em&gt;special characters&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;2: Inform the workspace path on the local machine.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://docs.devritchiecli.io/shared/rit-add-workspace.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-to-list&#34;&gt;&lt;strong&gt;How to list?&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;To list avalaible workspaces, you just have to run this command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;rit list workspace
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://docs.devritchiecli.io/shared/rit-list-workspace.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-to-update&#34;&gt;&lt;strong&gt;How to update?&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;If you&amp;rsquo;re not the only person updating the workspace (e.g: if it&amp;rsquo;s a cloned repository from Git) you may need to update the workspace to allow the CLI to &amp;ldquo;see&amp;rdquo; the newly available formulas or updates on your local machine after &lt;em&gt;pulling&lt;/em&gt; the code.&lt;/p&gt;
&lt;p&gt;To update a workspace, run this command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;rit update workspace
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After that, select the workspace name and wait for the CLI output message:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://docs.devritchiecli.io/shared/rit-update-workspace.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-to-delete&#34;&gt;&lt;strong&gt;How to delete?&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;To delete a workspace, run the command below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;rit delete workspace
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After that, follow the next steps:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Select the workspace name;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Confirm you want to delete the workspace.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://docs.devritchiecli.io/shared/rit-delete-workspace.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;learn-more&#34;&gt;&lt;strong&gt;Learn More&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Check out all the available formulas on Ritchie in the &lt;a href=&#34;http://docs.devritchiecli.io/reference/list-of-commands-and-flags/&#34;&gt;&lt;strong&gt;list of commands and flags&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Formulas: Rename formulas</title>
      <link>http://docs.devritchiecli.io/formulas/rename-formulas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://docs.devritchiecli.io/formulas/rename-formulas/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;h2 id=&#34;how-to-rename-a-formula&#34;&gt;&lt;strong&gt;How to rename a formula?&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;premisses&#34;&gt;&lt;strong&gt;Premisses&lt;/strong&gt;&lt;/h3&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;

Only local formulas can be renamed.
&lt;/div&gt;

&lt;h2 id=&#34;renaming-your-formula&#34;&gt;&lt;strong&gt;Renaming your formula&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;You can use the core command &lt;strong&gt;&lt;code&gt;rit rename formula&lt;/code&gt;&lt;/strong&gt; to rename a local formula. The required input parameters are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The name of the old formula;&lt;/li&gt;
&lt;li&gt;The new formula name;&lt;/li&gt;
&lt;li&gt;The workspace name.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;rit group old&lt;/code&gt; &amp;gt; &lt;code&gt;rit group new&lt;/code&gt; &amp;gt; &lt;code&gt;Default&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://docs.devritchiecli.io/shared/rit-rename-formula.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

&lt;ul&gt;
&lt;li&gt;Ritchie will automatically identify the workspace to which the formula belongs to.&lt;/li&gt;
&lt;li&gt;If the CLI identify more than one workspace with the entered formula, an extra step (&lt;em&gt;when using prompt execution&lt;/em&gt;) will be necessary to identify in which workspace the formula should have its name changed.&lt;/li&gt;
&lt;li&gt;This formula includes entry via &lt;em&gt;flag&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more information, check out the &lt;a href=&#34;http://docs.devritchiecli.io/standard-inputs/formulas-commands/&#34;&gt;&lt;strong&gt;Formula commands&lt;/strong&gt;&lt;/a&gt; section.
&lt;/div&gt;

&lt;h2 id=&#34;effects&#34;&gt;&lt;strong&gt;Effects&lt;/strong&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;All files that identify the formula will be changed to the new formula name. &lt;em&gt;These changes reflect both in Ritchie&amp;rsquo;s internal control folders and in the workspace folder (whether it is the default or custom)&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ritchie&amp;rsquo;s autocompleted will only identify the new formula name.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;next-steps&#34;&gt;&lt;strong&gt;Next steps&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Keep configuring your formula:&lt;/p&gt;
&lt;p&gt;👉 Check out &lt;a href=&#34;http://docs.devritchiecli.io/formulas/share-formulas/&#34;&gt;&lt;strong&gt;how to share formulas&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Formulas: Publish formulas</title>
      <link>http://docs.devritchiecli.io/formulas/publish-formulas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://docs.devritchiecli.io/formulas/publish-formulas/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;h2 id=&#34;how-to-publish&#34;&gt;&lt;strong&gt;How to publish?&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;There is a formula on Ritchie that allows the user to create and/or update a formula repository on Github/Gitlab.&lt;/p&gt;
&lt;h3 id=&#34;premisses&#34;&gt;&lt;strong&gt;Premisses&lt;/strong&gt;&lt;/h3&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;

To publish your formula, make sure to set Github / Gitlab credentials using the &lt;strong&gt;&lt;code&gt;rit set credential&lt;/code&gt;&lt;/strong&gt; command.
&lt;/div&gt;

&lt;h2 id=&#34;publish-your-repository&#34;&gt;&lt;strong&gt;Publish your repository&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;A formula has been created on the community repository to perform:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Initialize a local repository on Git (if necessary).&lt;/li&gt;
&lt;li&gt;Create the repository on Github/Gitlab.&lt;/li&gt;
&lt;li&gt;Generate release of a new version of the repository.&lt;/li&gt;
&lt;li&gt;Add the repository to Ritchie local repositories (&lt;strong&gt;&lt;code&gt;rit add repo&lt;/code&gt;&lt;/strong&gt; command).&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

Moreover, if the repository already exists, it will commit the new code and generate the new release version informed, before updating Ritchie repositories ( &lt;strong&gt;&lt;code&gt;rit update repo&lt;/code&gt;&lt;/strong&gt; command).
&lt;/div&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;rit publish repo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The user has to inform 5 different kinds of inputs:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The &lt;strong&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/strong&gt; (Github or Gitlab).&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;&lt;code&gt;repository&#39;s privacy&lt;/code&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;&lt;code&gt;repository&#39;s name&lt;/code&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;&lt;code&gt;local repository path&lt;/code&gt;&lt;/strong&gt; you wish to publish.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;&lt;code&gt;release version&lt;/code&gt;&lt;/strong&gt; to generate.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;http://docs.devritchiecli.io/shared/rit-publish-repo.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;

You can check if the publication has been successful by using the &lt;strong&gt;&lt;code&gt;rit list repo&lt;/code&gt;&lt;/strong&gt; command and see if the published repository appears.
&lt;/div&gt;

&lt;h2 id=&#34;publish-manually&#34;&gt;&lt;strong&gt;Publish manually&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;To publish a formula manually, you need to push it on a &lt;strong&gt;Github/Gitlab&lt;/strong&gt; repository, following these steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You need to aave an exclusive repository for formulas on Github / Gitlab. &lt;em&gt;It can be created from the a local repository, or based on a cloned repository.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Add your formulas to the repository &lt;em&gt;Using the &lt;strong&gt;&lt;code&gt;rit create formula&lt;/code&gt;&lt;/strong&gt; command, or &lt;strong&gt;copy / paste&lt;/strong&gt; folders&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Commit and push the new code to the Github/Gitlab repository.&lt;/li&gt;
&lt;li&gt;Generate a new release of the formulas repository.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;next-steps&#34;&gt;&lt;strong&gt;Next steps&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Keep configuring your formula:&lt;/p&gt;
&lt;p&gt;👉 Check out &lt;a href=&#34;http://docs.devritchiecli.io/formulas/share-formulas/&#34;&gt;&lt;strong&gt;how to share formulas&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Formulas: Share formulas</title>
      <link>http://docs.devritchiecli.io/formulas/share-formulas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://docs.devritchiecli.io/formulas/share-formulas/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;h2 id=&#34;how-to-share&#34;&gt;&lt;strong&gt;How to share?&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Once a formula repository has been published, other users can add it locally from its &lt;strong&gt;URL&lt;/strong&gt; to access its formulas.&lt;/p&gt;
&lt;p&gt;Example: &lt;a href=&#34;https://github.com/ZupIT/ritchie-formulas&#34;&gt;&lt;strong&gt;&lt;code&gt;https://github.com/ZupIT/ritchie-formulas&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To add a new repository on Ritchie, it is necessary to run the command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;rit add repo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once the repository has been added, Ritchie will use the selected release on the repository to access the available formulas.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://docs.devritchiecli.io/shared/rit-share-formula.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;

If the formula repository is &lt;strong&gt;private&lt;/strong&gt;, the user will have to inform his Github/Gitlab token.
&lt;/div&gt;

&lt;h2 id=&#34;how-to-see-the-repo-latest-version&#34;&gt;&lt;strong&gt;How to see the repo latest version?&lt;/strong&gt;&lt;/h2&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

This feature is available from Ritchie 2.2 version.
&lt;/div&gt;

&lt;p&gt;On Ritchie, you can check out new formula commands and if there is a new version of some repository you added locally.
Follow these steps:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 1.&lt;/strong&gt; Run the help command &lt;strong&gt;&lt;code&gt;rit --help&lt;/code&gt;&lt;/strong&gt;. The system will return a list with the group of available repositories.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;(new version 2.12.1) commons repo commands:
  beagle      Beagle commands
  bitbucket   Manage bitbucket objects
  clean-swift Manage clean-swift objects
  docker      Manipulate Docker objects
  git         Manipulate Git objects
  github      Manipulate GitHub objects
  gitlab      Manipulate GitLab objects
  istio       Istio Service Mesh commands
  jupyter     Manage jupyter objects
  kafka       Kafka commands
  kubernetes  Manipulate kubernetes objects
  publish     Publish command
  scaffold    Manipulate scaffold objects
  xcode       Manage xcode objects
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Step 2.&lt;/strong&gt; If you prefer, run the &lt;strong&gt;&lt;code&gt;rit list repo&lt;/code&gt;&lt;/strong&gt; command, that returns informations about the imported repositories, like the current version and the last available version.&lt;/p&gt;
&lt;h3 id=&#34;how-to-see-the-repo-formulas&#34;&gt;&lt;strong&gt;How to see the repo formulas?&lt;/strong&gt;&lt;/h3&gt;


&lt;div class=&#34;alert alert-info&#34; role=&#34;alert&#34;&gt;

This feature is available from Ritchie 2.11 version.
&lt;/div&gt;

&lt;p&gt;When you work with various formula groups, it may be hard to remember all the available commands.&lt;/p&gt;
&lt;p&gt;If you want to list formulas from a specific repository, follow the steps below:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Run the list command &lt;strong&gt;&lt;code&gt; rit list formula&lt;/code&gt;&lt;/strong&gt;. The system will return a list with the available groups of repositories and the  &amp;lsquo;&lt;strong&gt;ALL&lt;/strong&gt;&amp;rsquo; option.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;? Repository:
  ALL
&amp;gt; repo-name-1
  repo-name-2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Select the repository you want (or ALL), the system will return a list with the commands and a description defined on the &lt;strong&gt;&lt;code&gt;help.json&lt;/code&gt;&lt;/strong&gt; of each formula.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;? Repository: repo-name-1
COMMAND                                 DESCRIPTION
rit aws add terraform-eks               Generate terraform AWS eks
rit aws add terraform-vpc               Generate terraform AWS vpc
rit aws apply terraform                 Apply terraform on AWS
rit aws clean bucket                    Clean bucket AWS
rit aws create bucket                   Create bucket AWS
rit aws delete bucket                   Delete AWS objects

There are 6 formulas
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;how-can-i-update&#34;&gt;&lt;strong&gt;How can I update?&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;To update the version of any repository, you have to run the command below informing the repository and the version you wish to be updated:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;rit update repo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;next-steps&#34;&gt;&lt;strong&gt;Next steps&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Keep configuring your formula:&lt;/p&gt;
&lt;p&gt;👉 Check out how to &lt;a href=&#34;http://docs.devritchiecli.io/credentials/use-credentials-as-formula-inputs/&#34;&gt;&lt;strong&gt;use credentials&lt;/strong&gt;&lt;/a&gt; with your formulas.&lt;/p&gt;
&lt;p&gt;👉 Check out our &lt;a href=&#34;http://docs.devritchiecli.io/reference/list-of-commands-and-flags/&#34;&gt;&lt;strong&gt;list of commands&lt;/strong&gt;&lt;/a&gt; to see the available automations on our community repo.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Formulas: Delete formulas</title>
      <link>http://docs.devritchiecli.io/formulas/delete-formulas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://docs.devritchiecli.io/formulas/delete-formulas/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;h2 id=&#34;how-to-delete&#34;&gt;&lt;strong&gt;How to delete?&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;To delete a formula, you have to run this command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;rit delete formula
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once you&amp;rsquo;ve made this, follow the steps:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Select the workspace where is the formula you want to delete.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Select the formula to be deleted.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; The Ritchie will ask you to confirm if you wish to continue the operation to delete the formula. Just select the answer &amp;ldquo;yes&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://docs.devritchiecli.io/shared/delete-formula.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;learn-more&#34;&gt;&lt;strong&gt;Learn More&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;On this section, you saw how to delete a formula on Ritchie. To keep learning:&lt;/p&gt;
&lt;p&gt;👉 Go to &lt;a href=&#34;http://docs.devritchiecli.io/formulas/group-formulas/&#34;&gt;&lt;strong&gt;how to group formulas&lt;/strong&gt;&lt;/a&gt; section to find out how to run a formula inside another formula.&lt;/p&gt;
&lt;p&gt;👉 Check out all the available formulas on Ritchie in the &lt;a href=&#34;http://docs.devritchiecli.io/reference/list-of-commands-and-flags/&#34;&gt;&lt;strong&gt;list of commands and flags&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Formulas: Group formulas</title>
      <link>http://docs.devritchiecli.io/formulas/group-formulas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://docs.devritchiecli.io/formulas/group-formulas/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;h2 id=&#34;what-is-an-aggregation&#34;&gt;&lt;strong&gt;What is an aggregation?&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;On Ritchie, it is possible to &lt;strong&gt;run formulas inside formulas.&lt;/strong&gt; This process is called &lt;strong&gt;Formula aggregation&lt;/strong&gt;‌.&lt;/p&gt;
&lt;p&gt;This functionality allows you, for example, to make operations in which you need to run consecutive formulas.&lt;/p&gt;
&lt;p&gt;Check out on the following topics to understand how works this aggregation.&lt;/p&gt;
&lt;h2 id=&#34;how-to-group&#34;&gt;&lt;strong&gt;How to group?&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;1-premisse&#34;&gt;&lt;strong&gt;1. Premisse&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;To group formulas, it is necessary to use &lt;strong&gt;Standard Inputs&lt;/strong&gt;. For more information, check out the &lt;a href=&#34;http://docs.devritchiecli.io/standard-inputs/&#34;&gt;&lt;strong&gt;Standard Inputs section&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;2-execution&#34;&gt;&lt;strong&gt;2. Execution&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;When &lt;a href=&#34;http://docs.devritchiecli.io/formulas/configure-inputs/&#34;&gt;&lt;strong&gt;implementing a formula&lt;/strong&gt;&lt;/a&gt;, the file where the operation is coded needs to execute a command line associated to a formula.‌&lt;/p&gt;
&lt;p&gt;The grouped formula command line needs to be executed using &lt;strong&gt;Standard Inputs&lt;/strong&gt;, which means informing the inputs parameters directly on the code.‌&lt;/p&gt;
&lt;h3 id=&#34;3-example&#34;&gt;&lt;strong&gt;3. Example&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;&lt;code&gt;rit publish repo&lt;/code&gt;&lt;/strong&gt; formula has been implemented using formula aggregation, that you can find its &lt;a href=&#34;https://github.com/ZupIT/ritchie-formulas/tree/master/publish/repo&#34;&gt;&lt;strong&gt;formula implementation&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;On the example below, you&amp;rsquo;ll find below how this aggregation works on the code part, using &lt;strong&gt;&lt;code&gt;Input flags&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;

&lt;ul&gt;
&lt;li&gt;This formula has been implemented using &lt;strong&gt;&lt;code&gt;Shell&lt;/code&gt;&lt;/strong&gt; and the reasoning would be the same for any other programming language.&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;runFormula() {
  if [ &amp;#34;Github&amp;#34; == $PROVIDER ]
  then
    echo &amp;#34;🐙 Github provider selected&amp;#34;
    rit github publish repo --privacy=$PRIVACY --project_name=$PROJECT_NAME --workspace_path=$WORKSPACE_PATH --version=$VERSION
  elif [ &amp;#34;Gitlab&amp;#34; == $PROVIDER ]
  then
    echo &amp;#34;🦊 Gitlab provider selected&amp;#34;
    rit gitlab publish repo --privacy=$PRIVACY --project_name=$PROJECT_NAME --workspace_path=$WORKSPACE_PATH --version=$VERSION
  else
    echo &amp;#34;🤖 Unexpected Provider informed. Check it please and try again.&amp;#34;
  fi
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here, according to the input informed by the user, two different formulas can be executed:‌&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;rit github publish repo&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;rit gitlab publish repo&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To do so, the grouped formulas inputs parameters are informed dynamically according to the inputs parameters of the main formula (&lt;strong&gt;&lt;code&gt;rit publish repo&lt;/code&gt;&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;Depending on the operation, the &lt;strong&gt;&lt;code&gt;input flags&lt;/code&gt;&lt;/strong&gt; used for the command could be generated according to other operations performed through the formula execution before executing the grouped formula command line.‌&lt;/p&gt;
&lt;h3 id=&#34;learn-more&#34;&gt;&lt;strong&gt;Learn More&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Check out the &lt;a href=&#34;http://docs.devritchiecli.io/tutorials/&#34;&gt;&lt;strong&gt;tutorials&lt;/strong&gt;&lt;/a&gt; page to apply all Ritchie&amp;rsquo;s concepts you have learned.‌&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Check out our &lt;a href=&#34;http://docs.devritchiecli.io/reference/list-of-commands-and-flags/&#34;&gt;&lt;strong&gt;list of commands&lt;/strong&gt;&lt;/a&gt; to see the available automations on our community repository.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Formulas: Test formulas</title>
      <link>http://docs.devritchiecli.io/formulas/test-formula/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://docs.devritchiecli.io/formulas/test-formula/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;h2 id=&#34;unit-tests&#34;&gt;&lt;strong&gt;Unit Tests&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;In Ritchie CLI context, Unit tests are the way of testing a part of your formula implementation.&lt;/p&gt;
&lt;p&gt;Some of the formula templates - Java and Golang - currently have a Test class to write and run the formula unit tests.&lt;/p&gt;
&lt;p&gt;You can also configure your CI/CD and release processes to run those tests after each formula update or addition.&lt;/p&gt;
&lt;h2 id=&#34;functional-tests&#34;&gt;&lt;strong&gt;Functional Tests&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;using-github-actions&#34;&gt;&lt;strong&gt;Using Github Actions&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Ritchie’s team recently developed a Github action to test CLI commands outputs. Check the Github repository &lt;a href=&#34;https://github.com/GuillaumeFalourd/test-cli-commands-action&#34;&gt;&lt;strong&gt;test-cli-commands-action&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ritchie CLI uses this action to make sure the CLI core commands behave as expected after updating the files related to them.&lt;/p&gt;
&lt;h3 id=&#34;how-does-this-action-work&#34;&gt;&lt;strong&gt;How does this action work?&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;http://docs.devritchiecli.io/shared/githubactions.PNG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;When you use this action, you can check different implementation scenarios through the formulas outputs, according to the formulas inputs. You can run the tests only when you update a file from the formula directory.&lt;/p&gt;
&lt;p&gt;For more information about actions, check out the &lt;a href=&#34;https://github.com/marketplace/actions/test-cli-commands-action&#34;&gt;&lt;strong&gt;Github Marketplace page&lt;/strong&gt;&lt;/a&gt; or the &lt;a href=&#34;http://docs.devritchiecli.io/tutorials/how-to-test-formulas/&#34;&gt;&lt;strong&gt;How to test formulas&lt;/strong&gt;&lt;/a&gt; tutorial.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
